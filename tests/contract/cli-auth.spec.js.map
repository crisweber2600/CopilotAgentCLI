{"version":3,"file":"cli-auth.spec.js","sourceRoot":"","sources":["cli-auth.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { afterEach, beforeEach, describe, expect, it, vi } from 'vitest';\nimport { mkdtempSync, rmSync } from 'node:fs';\nimport { tmpdir } from 'node:os';\nimport { join } from 'node:path';\nimport type { AnySchema } from 'ajv';\nimport { expectExitCode, expectJsonSchema, parseJson, runCliCommand } from './cli-delegate.spec';\n\nconst loginResponseSchema: AnySchema = {\n  type: 'object',\n  properties: {\n    status: { type: 'string', enum: ['authenticated'] },\n    expiresAt: { type: 'string', format: 'date-time' },\n    method: { type: 'string' },\n  },\n  required: ['status', 'method'],\n  additionalProperties: false,\n};\n\nconst logoutResponseSchema: AnySchema = {\n  type: 'object',\n  properties: {\n    status: { type: 'string', enum: ['unauthenticated'] },\n  },\n  required: ['status'],\n  additionalProperties: false,\n};\n\nvi.setConfig({ testTimeout: 40000, hookTimeout: 40000 });\n\ndescribe('cli auth contract', () => {\n  let agentHome: string;\n  let baseEnv: NodeJS.ProcessEnv;\n\n  beforeEach(() => {\n    agentHome = mkdtempSync(join(tmpdir(), 'cli-auth-'));\n    baseEnv = {\n      COPILOT_AGENT_HOME: agentHome,\n      COPILOT_CLI_TEST_MODE: 'contract',\n    };\n  });\n\n  afterEach(() => {\n    rmSync(agentHome, { recursive: true, force: true });\n  });\n\n  it('authenticates via device-code flow and persists session', async () => {\n    const result = await runCliCommand(['login', '--method', 'device-code', '--json'], {\n      env: baseEnv,\n    });\n\n    expectExitCode(result, 0);\n    const payload = parseJson(result.stdout);\n    expectJsonSchema(payload, loginResponseSchema);\n    expect(payload.method).toBe('device-code');\n    expect(result.stderr).toContain('device');\n  });\n\n  it('authenticates via env-token when token provided', async () => {\n    const result = await runCliCommand(['login', '--method', 'env-token', '--json'], {\n      env: {\n        ...baseEnv,\n        COPILOT_AGENT_TOKEN: 'test-token',\n      },\n    });\n\n    expectExitCode(result, 0);\n    const payload = parseJson(result.stdout);\n    expectJsonSchema(payload, loginResponseSchema);\n    expect(payload.method).toBe('env-token');\n  });\n\n  it('fails env-token login without token', async () => {\n    const result = await runCliCommand(['login', '--method', 'env-token', '--json'], {\n      env: baseEnv,\n    });\n\n    expectExitCode(result, 3);\n    expect(result.stderr).toContain('token');\n  });\n\n  it('logs out and clears session state', async () => {\n    const env = {\n      ...baseEnv,\n      COPILOT_AGENT_TOKEN: 'logout-token',\n    };\n\n    const login = await runCliCommand(['login', '--method', 'env-token', '--json'], { env });\n    expectExitCode(login, 0);\n\n    const logout = await runCliCommand(['logout', '--json'], { env });\n    expectExitCode(logout, 0);\n    const payload = parseJson(logout.stdout);\n    expectJsonSchema(payload, logoutResponseSchema);\n  });\n});\n"]}