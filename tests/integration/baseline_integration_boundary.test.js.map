{"version":3,"file":"baseline_integration_boundary.test.js","sourceRoot":"","sources":["baseline_integration_boundary.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { describe, expect, it } from 'vitest';\nimport { mkdtempSync, rmSync } from 'node:fs';\nimport { join } from 'node:path';\nimport { tmpdir } from 'node:os';\n\nimport { ArtifactService } from '../../src/services/artifact_service';\n\nconst schemaPath = join(\n  process.cwd(),\n  'specs',\n  '001-create-a-structured',\n  'contracts',\n  'handoff-artifact.schema.json',\n);\n\ndescribe('baseline integration boundary', () => {\n  it('requires revert before re-executing post-baseline steps', async () => {\n    const artifactsDir = mkdtempSync(join(tmpdir(), 'baseline-service-'));\n    const service = new ArtifactService({ artifactsDir, schemaPath });\n\n    await service.writeHandoffArtifact({\n      workItemId: 'work-item-001-create-a-structured',\n      workflow: { name: 'Implement Plan-to-Execution Orchestrator', version: '1.0.0' },\n      step: { key: 'phase-cli', order: 5 },\n      eventType: 'attempt-completed',\n      attemptId: 'attempt-phase-cli-001',\n      actor: 'cli-engineer',\n      outcome: 'CLI commands implemented.',\n      nextAction: 'Prepare baseline integration.',\n      baselineIntegration: 'pre',\n      links: [],\n      timestamp: new Date('2025-09-20T10:00:00.000Z'),\n    });\n\n    await service.writeHandoffArtifact({\n      workItemId: 'work-item-001-create-a-structured',\n      workflow: { name: 'Implement Plan-to-Execution Orchestrator', version: '1.0.0' },\n      step: { key: 'phase-cli', order: 5 },\n      eventType: 'baseline-integration',\n      attemptId: 'attempt-phase-cli-001',\n      actor: 'devops-engineer',\n      outcome: 'Merged CLI changes to baseline.',\n      nextAction: 'Require revert before rework.',\n      baselineIntegration: 'post',\n      links: [],\n      timestamp: new Date('2025-09-20T12:00:00.000Z'),\n    });\n\n    await expect(\n      service.writeHandoffArtifact({\n        workItemId: 'work-item-001-create-a-structured',\n        workflow: { name: 'Implement Plan-to-Execution Orchestrator', version: '1.0.0' },\n        step: { key: 'phase-cli', order: 5 },\n        eventType: 'attempt-completed',\n        attemptId: 'attempt-phase-cli-002',\n        actor: 'cli-engineer',\n        outcome: 'Attempted re-run without revert.',\n        nextAction: 'Revert baseline first.',\n        baselineIntegration: 'pre',\n        links: [],\n        timestamp: new Date('2025-09-20T13:00:00.000Z'),\n      }),\n    ).rejects.toThrow(/baseline integration boundary/i);\n\n    await service.writeHandoffArtifact({\n      workItemId: 'work-item-001-create-a-structured',\n      workflow: { name: 'Implement Plan-to-Execution Orchestrator', version: '1.0.0' },\n      step: { key: 'phase-cli', order: 5 },\n      eventType: 'attempt-rejected',\n      attemptId: 'attempt-phase-cli-001',\n      actor: 'release-manager',\n      outcome: 'Baseline reverted; safe to retry.',\n      nextAction: 'Create new attempt.',\n      baselineIntegration: 'post',\n      links: [],\n      timestamp: new Date('2025-09-20T13:30:00.000Z'),\n    });\n\n    const rework = await service.writeHandoffArtifact({\n      workItemId: 'work-item-001-create-a-structured',\n      workflow: { name: 'Implement Plan-to-Execution Orchestrator', version: '1.0.0' },\n      step: { key: 'phase-cli', order: 5 },\n      eventType: 'attempt-completed',\n      attemptId: 'attempt-phase-cli-002',\n      actor: 'cli-engineer',\n      outcome: 'CLI commands re-implemented.',\n      nextAction: 'Proceed to CI workflows.',\n      baselineIntegration: 'pre',\n      links: [],\n      timestamp: new Date('2025-09-20T14:00:00.000Z'),\n    });\n\n    expect(rework.attemptId).toBe('attempt-phase-cli-002');\n\n    rmSync(artifactsDir, { recursive: true, force: true });\n  });\n});\n"]}